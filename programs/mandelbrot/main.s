;
; File generated by cc65 v 2.18 - Ubuntu 2.19-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.19-1"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_putch
	.export		_putstrnl
	.export		_putstr
	.export		_gradient
	.export		_mandelbrot
	.export		_main

.segment	"DATA"

_putch:
	.word	$FFF1
_putstrnl:
	.word	$FFF4
_putstr:
	.word	$FFF7

.segment	"RODATA"

_gradient:
	.byte	$20,$2E,$2D,$27,$7C,$2B,$2F,$3D,$2A,$24,$26,$23,$40,$4D,$57,$58
	.byte	$00
L0007:
	.byte	$50,$6C,$6F,$74,$74,$69,$6E,$67,$20,$4D,$61,$6E,$64,$65,$6C,$62
	.byte	$72,$6F,$74,$20,$73,$65,$74,$20,$62,$65,$74,$77,$65,$65,$6E,$20
	.byte	$5B,$2D,$32,$2C,$20,$31,$5D,$20,$78,$20,$5B,$2D,$31,$2C,$20,$31
	.byte	$5D,$3A,$00

; ---------------------------------------------------------------
; void __near__ mandelbrot (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mandelbrot: near

.segment	"CODE"

	ldy     #$1D
	jsr     subysp
	lda     _putstrnl
	ldx     _putstrnl+1
	jsr     pushax
	lda     #<(L0007)
	ldx     #>(L0007)
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
	ldx     #$00
	lda     #$09
	ldy     #$03
	jsr     staxysp
	lda     #$15
	ldy     #$01
	jsr     staxysp
	txa
L0062:	ldy     #$19
	jsr     staxysp
	ldy     #$1A
	lda     (sp),y
	cmp     #$00
	bne     L001A
	dey
	lda     (sp),y
	cmp     #$18
L001A:	jcs     L0014
	ldy     #$1C
	jsr     pushwysp
	ldy     #$04
	jsr     ldaxysp
	jsr     tosumulax
	jsr     pushax
	ldx     #$FF
	lda     #$00
	jsr     tosaddax
	ldy     #$13
	jsr     staxysp
	ldx     #$00
	txa
L0061:	ldy     #$1B
	jsr     staxysp
	ldy     #$1C
	lda     (sp),y
	cmp     #$00
	bne     L0027
	dey
	lda     (sp),y
	cmp     #$50
L0027:	jcs     L0021
	ldy     #$1E
	jsr     pushwysp
	ldy     #$06
	jsr     ldaxysp
	jsr     tosumulax
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	clc
	adc     ptr1
	pha
	lda     #$FE
	adc     ptr1+1
	tax
	pla
	ldy     #$15
	jsr     staxysp
	ldx     #$00
	stz     sreg
	stz     sreg+1
	txa
	ldy     #$0F
	jsr     steaxysp
	ldy     #$0B
	jsr     steaxysp
	jmp     L004E
L0033:	ldy     #$12
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$16
	jsr     ldeaxysp
	jsr     tosmuleax
	txa
	ldx     sreg
	ldy     sreg+1
	cpy     #$80
	ldy     #$09
	jsr     staxysp
	ldy     #$0E
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$12
	jsr     ldeaxysp
	jsr     tosmuleax
	txa
	ldx     sreg
	ldy     sreg+1
	cpy     #$80
	ldy     #$07
	jsr     staxysp
	ldy     #$12
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$12
	jsr     ldeaxysp
	jsr     tosmuleax
	jsr     asreax4
	jsr     asreax3
	ldy     #$05
	jsr     staxysp
	ldy     #$0C
	jsr     pushwysp
	ldy     #$0A
	jsr     ldaxysp
	jsr     tossubax
	jsr     pushax
	ldy     #$18
	jsr     ldaxysp
	jsr     tosaddax
	jsr     axlong
	ldy     #$0F
	jsr     laddeqysp
	ldy     #$08
	jsr     pushwysp
	ldy     #$16
	jsr     ldaxysp
	jsr     tosaddax
	jsr     axlong
	ldy     #$0B
	jsr     steaxysp
	ldy     #$08
	jsr     ldaxysp
	clc
	ldy     #$09
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	cmp     #$01
	txa
	sbc     #$04
	bvs     L004C
	eor     #$80
L004C:	bmi     L0034
	ldy     #$18
	jsr     ldaxysp
	ina
	bne     L004E
	inx
L004E:	ldy     #$17
	jsr     staxysp
	ldy     #$18
	lda     (sp),y
	cmp     #$00
	bne     L0037
	dey
	lda     (sp),y
	cmp     #$40
L0037:	jcc     L0033
L0034:	ldy     #$1A
	jsr     pushwysp
	lda     #$0F
	jsr     tosumula0
	jsr     shrax4
	jsr     shrax2
	sta     ptr1
	txa
	clc
	adc     #>(_gradient)
	sta     ptr1+1
	ldy     #<(_gradient)
	lda     (ptr1),y
	sta     (sp)
	lda     _putch
	ldx     _putch+1
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	ldx     #$00
	pha
	lda     (sp)
	sta     jmpvec+1
	dey
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
	ldy     #$1C
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	ina
	jne     L0061
	inx
	jmp     L0061
L0021:	lda     _putch
	ldx     _putch+1
	jsr     pushax
	ldx     #$00
	lda     #$0D
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
	lda     _putch
	ldx     _putch+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	pha
	lda     (sp)
	sta     jmpvec+1
	ldy     #$01
	lda     (sp),y
	sta     jmpvec+2
	pla
	jsr     jmpvec
	jsr     incsp2
	ldy     #$1A
	jsr     ldaxysp
	ina
	jne     L0062
	inx
	jmp     L0062
L0014:	ldy     #$1D
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _mandelbrot
	ldx     #$00
	txa
	rts

.endproc

