MEMORY {
    ZP:     start = $50, size = $B0, type = rw, define = yes;
    HEADER: start = $0800, size = 2, file = %O;
    RAM:    start = $0802, size = $7700-$0802, type = rw, define = yes;
    STACK:  start = $7700, size = $0800, type = rw, define = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,        type = zp,  define   = yes;
    HEADER:   load = HEADER,    type = ro,  define   = yes;
    STARTUP:  load = RAM,       type = ro;
    CODE:     load = RAM,       type = ro;
    ONCE:     load = RAM,       type = ro,  optional = yes;
    RODATA:   load = RAM,       type = ro;
    DATA:     load = RAM,       type = rw,  define   = yes, run = RAM;
    BSS:      load = RAM,       type = bss, define   = yes;
    HEAP:     load = RAM,       type = bss, optional = yes;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSIZE__:  value = $0200, type = weak;
}